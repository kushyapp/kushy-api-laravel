<?php

namespace KushyApi\Jobs;

use KushyApi\PostsCategories;
use Illuminate\Bus\Queueable;
use Illuminate\Queue\SerializesModels;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;

class AddProductCategories implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    /**
     * Product categories and the product ID to add them to
     *
     * @var string  $categories - Comma separated string generated by Semantic UI Dropdown
     * @var int     $id
     */
    private $categories;
    private $id;

    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct($categories, $id)
    {
        $this->categories = $categories;
        $this->id = $id;
    }

    public function createCategory($category)
    {
        // Check if cat relationship exists first
        $checkCategory = PostsCategories::where([
            'category_id' => $category,
            'post_id' => $this->id,
        ])->first();

        if(!$checkCategory) {
            // Add Category relationship
            $newCategory = PostsCategories::create([
                'category_id' => $category,
                'post_id' => $this->id,
            ]);
        }
    }

    /**
     * Execute the job.
     *
     * @return void
     */
    public function handle()
    {
        /**
         * Check if this is a "multiple" select
         * Semantic UI adds commas for multi-select dropdowns
         */
        if(strpos($this->categories, ','))
        {
            $categories = explode(',', $this->categories);
            foreach($categories as $category) {
                if($category != '') {
                    $this->createCategory($category);
                }
            }
        } else {
            $this->createCategory($this->categories);
        }
    }
}
